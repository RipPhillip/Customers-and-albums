--Which tracks appeared in most playlists
SELECT tracks.name, COUNT(tracks.TrackId) AS Listening_Lots
from tracks
LEFT JOIN playlist_track
ON tracks.TrackId = playlist_track.TrackId
group by  1
order by 2 DESC;

--Which track generated the most revenue
select COUNT(invoice_items.TrackId), SUM(invoice_items.UnitPrice) AS Oh_Yeah FROM invoice_items
LEFT JOIN tracks
ON tracks.TrackId = invoice_items.TrackId
GROUP BY tracks.TrackId
order by 2 DESC
LIMIT 50;

--Which album generated the most revenue
SELECT COUNT(invoice_items.TrackId), tracks.AlbumId, SUM(invoice_items.UnitPrice) AS Big_Bucks, albums.Title FROM invoice_items
INNER JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
LEFT JOIN albums
ON tracks.AlbumId = albums.AlbumId
GROUP BY albums.AlbumId
ORDER BY 3 DESC;

--Which genre generated the most revenue
SELECT genres.Name,  SUM(invoice_items.UnitPrice) AS Paid_Lots
FROM genres
LEFT JOIN tracks
ON tracks.GenreId = genres.GenreId
LEFT JOIN invoice_items
ON invoice_items.TrackId = tracks.TrackId
GROUP BY 1
ORDER BY 2 DESC;

--Which countries have the highest sales revenue? 
SELECT SUM(invoices.total) AS Buying_Lots, invoices.BillingCountry
FROM invoices
GROUP BY 2
ORDER BY 1 DESC;

--What percentage of revenue does each country make up
SELECT invoices.BillingCountry, ROUND((sum(invoice_items.UnitPrice) / (select sum(invoice_items.UnitPrice) from invoice_items) * 100), 2) as '% from Grand Total'
FROM invoice_items
LEFT JOIN invoices
ON invoices.InvoiceId = invoice_items.InvoiceId
GROUP BY 1
ORDER BY 2 DESC;

--How many customers did each employee support?
SELECT employees.EmployeeId, employees.FirstName, employees.LastName, SUM(customers.SupportRepId) AS Dudes_Helped
FROM employees
JOIN customers
ON employees.EmployeeId=customers.SupportRepId
GROUP BY 1
ORDER BY 4 DESC;

--What is average revenue for each sale
SELECT inv.CustomerId, ROUND(AVG(total),2) AS What_They_Buyin_AVG, SUM(total) AS Total_spent
FROM invoices AS inv
JOIN customers AS cus
ON inv.CustomerId = cus.CustomerId
GROUP BY 1
ORDER BY 1;



